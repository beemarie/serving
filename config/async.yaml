# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: async
  namespace: knative-serving
  labels:
    serving.knative.dev/release: devel
spec:
  selector:
    matchLabels:
      app: async
      role: async
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: async
        role: async
        serving.knative.dev/release: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: async
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: ko://knative.dev/serving/cmd/async

        # The numbers are based on performance test results from
        # https://github.com/knative/serving/issues/1625#issuecomment-511930023
        resources:
          requests:
            cpu: 300m
            memory: 60Mi
          limits:
            cpu: 1000m
            memory: 600Mi

        env:
        # Run Activator with GC collection when newly generated memory is 500%.
        - name: GOGC
          value: "500"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "my-cluster-kafka-bootstrap.kafka:9092"
        - name: KAFKA_TOPIC
          value: "knative-demo-topic"
        - name: KAFKA_KEY
          value: "0"
        - name: KAFKA_HEADERS
          value: "content-type:application/json"
        securityContext:
          allowPrivilegeEscalation: false

        ports:
        - name: http1
          containerPort: 8012
        - name: h2c
          containerPort: 8013

        # readinessProbe: &probe
        #   httpGet:
        #     port: 8012
        #     httpHeaders:
        #     - name: k-kubelet-probe
        #       value: "async"
        #   failureThreshold: 12
        # livenessProbe: *probe

      # The activator (often) sits on the dataplane, and may proxy long (e.g.
      # streaming, websockets) requests.  We give a long grace period for the
      # activator to "lame duck" and drain outstanding requests before we
      # forcibly terminate the pod (and outstanding connections).  This value
      # should be at least as large as the upper bound on the Revision's
      # timeoutSeconds property to avoid servicing events disrupting
      # connections.
      # terminationGracePeriodSeconds: 600

---
apiVersion: v1
kind: Service
metadata:
  name: async-service
  namespace: knative-serving
  labels:
    app: async
    serving.knative.dev/release: devel
spec:
  selector:
    app: async
  ports:
  - name: http
    port: 80
    targetPort: 8012
  - name: http2
    port: 81
    targetPort: 8013
  type: ClusterIP 